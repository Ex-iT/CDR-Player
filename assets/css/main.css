:root {
  --border-radius: 4px;
  --blur-medium: 5px;
  --color-background: 13 13 13;
  --color-foreground: 255 255 255;
  --color-highlight: 0 144 255;
  --color-error: 244 67 54;
  --color-soft: 102 102 102;
  --color-softer: 248 248 248;
  --color-border: 236 236 236;
  --color-border-dark: 85 85 85;
  --color-text: 10 10 10;
  --shadow: 0 1px 4px rgb(0 0 0 / 30%), 0 0 40px rgb(0 0 0 / 10%) inset;
  --spacing-small: 0.313rem;
  --spacing-medium: 0.625rem;
  --spacing-large: 1.25rem;
  --spacing-larger: 1.5rem;
  --spacing-extra-large: 1.875rem;
  --width-max: 1280px;
  --gradient-stops: transparent, transparent, transparent, rgb(var(--color-foreground) / 80%);
  --gradient-stops-small: transparent, transparent, rgb(var(--color-foreground));
  --transition: 0.5s cubic-bezier(0.55, 0, 0.1, 1)
}

/*
  https://www.joshwcomeau.com/css/custom-css-reset/#the-css-reset-1

  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
  box-sizing: border-box;
}

/*
  2. Remove default margin
*/
* {
  margin: 0;
}

/*
  3. Allow percentage-based heights in the application
*/
html, body {
  height: 100%;
}

/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  font: normal normal normal 16px/1.4 Arial, Verdana, monospace;
  -webkit-font-smoothing: antialiased;
  line-height: 1.5;
}

/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/*
  8. Avoid text overflows
*/
p {
  color: var(--color-text);
  overflow-wrap: break-word;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--color-text);
  font-family: Oswald, Arial, sans-serif;
  overflow-wrap: break-word;
}

/*
  9. Create a root stacking context
*/
/* stylelint-disable-next-line selector-id-pattern */
#__nuxt {
  height: 100%;
  isolation: isolate;
}

/* stylelint-disable-next-line no-duplicate-selectors */
html, body {
  background-color: rgb(var(--color-foreground));
  color: rgb(var(--color-text));
}

body.is-night {
  background-color: rgb(var(--color-background));
}

::selection {
  background-color: rgb(var(--color-highlight));
  color: rgb(var(--color-foreground));
}

h1 {
  border-image-slice: 1;
  border-image-source: linear-gradient(to bottom left, var(--gradient-stops));
  border-style: solid;
  border-width: 1px;
  font-size: 1.75rem;
  line-height: 2rem;
  text-transform: uppercase;
}

h1 > span {
  background-color: rgb(var(--color-text));
  color: rgb(var(--color-foreground));
  display: inline-block;
  padding: 0.4rem;
}

h2 {
  border-image-slice: 1;
  border-image-source: linear-gradient(
    to bottom left,
    var(--gradient-stops-small)
  );
  border-style: solid;
  border-width: 1px;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1.6rem;
  margin-bottom: var(--spacing-medium);
  text-transform: uppercase;
}

@media (width > 412px) {
  h2 {
    border-image-source: linear-gradient(
      to bottom left,
      var(--gradient-stops)
    );
  }
}

h2 > span {
  background-color: rgb(var(--color-text));
  color: rgb(var(--color-foreground));
  display: inline-block;
  padding: 0.2rem;
}

h3 {
  font-size: 1.4rem;
  letter-spacing: 1px;
  text-transform: uppercase;
}

a {
  color: rgb(var(--color-highlight) / 80%);
  text-decoration: underline 0.15rem transparent;
  transition: all var(--transition);
}

a:hover {
  color: rgb(var(--color-highlight));
  text-decoration-color: inherit;
}

/* stylelint-disable-next-line no-duplicate-selectors */
p {
  font-size: 1.2rem;
  margin-bottom: var(--spacing-medium);
}

li {
  font-size: 1.2rem;
}

.ellipsis {
  -webkit-box-orient: vertical;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  overflow: hidden;
}

.sr-only {
  border-width: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}
